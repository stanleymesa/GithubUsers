//file:noinspection DependencyNotationArgument
def keyPropertiesFile = rootProject.file("app.properties")
def keyProperties = new Properties()
keyProperties.load(new FileInputStream(keyPropertiesFile))

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'org.jetbrains.kotlin.android'
apply plugin: 'com.google.dagger.hilt.android'
apply plugin: 'kotlin-parcelize'
apply plugin: 'kotlin-kapt'
apply plugin: 'org.jetbrains.kotlin.plugin.serialization'
apply plugin: 'org.jetbrains.kotlin.plugin.compose'

android {
    compileSdk keyProperties["sdk.compile"].toInteger()
    namespace AppConfig.moduleNameSpace

    defaultConfig {
        minSdk keyProperties["sdk.min"].toInteger()
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        consumerProguardFiles("consumer-rules.pro")
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
        buildConfigField("int", "VERSION_CODE", keyProperties["app.version.code"])
        buildConfigField("String", "VERSION_NAME", "\"${keyProperties["app.version.name"]}\"")
        buildConfigField("String", "APPLICATION_ID", "\"${AppConfig.moduleNameSpace}\"")
    }

    buildTypes {
        debug {
//            buildConfigField("String", "BASE_URL", "\"${keyProperties["baseUrl.dev"]}\"")
            buildConfigField("String", "BASE_URL", "\"${keyProperties["baseUrl.stag"]}\"")
//            buildConfigField("String", "BASE_URL", "\"${keyProperties["baseUrl.prod"]}\"")
            debuggable true
        }
        release {
//            buildConfigField("String", "BASE_URL", "\"${keyProperties["baseUrl.dev"]}\"")
            buildConfigField("String", "BASE_URL", "\"${keyProperties["baseUrl.stag"]}\"")
//            buildConfigField("String", "BASE_URL", "\"${keyProperties["baseUrl.prod"]}\"")
            debuggable false
            minifyEnabled false
            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    buildFeatures {
        dataBinding true
        buildConfig true
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17.toString()
        freeCompilerArgs = freeCompilerArgs + "-opt-in=kotlin.RequiresOptIn"

        // Enable experimental coroutines APIs, including Flow
        freeCompilerArgs = freeCompilerArgs + "-opt-in=kotlin.Experimental"

        // Enable experimental compose APIs
//        freeCompilerArgs =
//                freeCompilerArgs + "-opt-in=androidx.compose.material.ExperimentalMaterialApi"
//        freeCompilerArgs =
//                freeCompilerArgs + "-opt-in=androidx.compose.animation.ExperimentalAnimationApi"
//        freeCompilerArgs =
//                freeCompilerArgs + "-opt-in=androidx.compose.ui.ExperimentalComposeUiApi"
//        freeCompilerArgs =
//                freeCompilerArgs + "-opt-in=androidx.compose.foundation.ExperimentalFoundationApi"
//        freeCompilerArgs =
//                freeCompilerArgs + "-opt-in=androidx.compose.foundation.layout.ExperimentalLayoutApi"
    }
    buildFeatures {
        compose true
        buildConfig true
    }
    composeOptions {
        kotlinCompilerExtensionVersion = libs.versions.kotlin.compiler.get()
    }
}

dependencies {
    implementation libs.core.ktx
    implementation libs.lifecycle.runtime.ktx
    implementation libs.activity.compose
//    implementation platform(Deps.composeBom)
    implementation libs.compose.ui
    implementation libs.compose.ui.graphics
    debugImplementation libs.compose.ui.tooling
    debugImplementation libs.compose.ui.tooling.preview
    implementation libs.compose.material3
    implementation libs.timber

    implementation libs.compose.viewmodel
    implementation libs.compose.navigation
    implementation libs.compose.material.icon
    implementation libs.hilt.navigation.compose
    implementation libs.compose.constraintlayout
    implementation libs.coil
    implementation libs.compose.navigation
    implementation libs.kotlinx.serialization.core
    implementation libs.kotlinx.serialization.json

    implementation libs.datastore

    implementation libs.hilt.android
    kapt libs.hilt.compiler

    testImplementation libs.junit
    androidTestImplementation libs.androidx.test.ext.junit
    androidTestImplementation libs.espresso.core
    androidTestImplementation platform(libs.compose.bom)
    androidTestImplementation libs.compose.ui.test
    debugImplementation libs.compose.ui.test.junit4
    debugImplementation libs.compose.ui.test.manifest
}